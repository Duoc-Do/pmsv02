@model Dictionary<string, WebApp.Areas.Accounting.Models.SysTableDetailView>
@{
    string tablename = Model.FirstOrDefault().Value.TableName;
    string urlupdate = Url.Action("Update", "SysTableDetail", new { area = "Accounting" });
    
}

<div class="box box-primary">
    <div class="box-body">
        <div class="row-fluid">

            <div id="draggablePanelList" class="list-group">
                <div id="draggablePanelList2">
                @foreach (var item in Model)
                {
                    <div class="list-group-item">
                        <div class="checkbox">
                            <label class="input-button">
                                <input type="checkbox" class="filter-column" data-columnorder="@(item.Value.GridViewOrder)" data-columnname="@(item.Value.ColumnName)" data-columnvalue="@(item.Value.GridViewShow ? "true" : "false")"   @(item.Value.GridViewShow ? "checked=\"checked\"" : "")>@item.Value.Des</label>
                        </div>
                    </div>                
                }
                    </div>
                <div class="list-group-item">
                    <div class="checkbox">
                        <button data-tablename="@(tablename)" class="btn btn-primary btn-flat btn-sm" type="button" id="@string.Format("btnfilter{0}", tablename)">
                            <span class="fa fa-save"></span>&nbsp;Lưu
                   
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>





<script>
    jQuery(function ($) {
        var panelList = $('#draggablePanelList2');
        panelList.sortable({
            // Only make the .panel-heading child elements support dragging.
            // Omit this to make then entire <li>...</li> draggable.
            handle: '.input-button',
            update: function () {
                $('#draggablePanelList2', panelList).each(function (index, elem) {
                    var $listItem = $(elem),
                        newIndex = $listItem.index();
                    // Persist the new indices.
                });
            }
        });
    });


    $(document).ready(function () {
        $('.dropdown-menu input,.dropdown-menu label').click(function (e) {
            e.stopPropagation();
        });

        $(".filter-column").change(function () {
            if (this.checked) {
                $(this).attr("data-columnvalue", true);
            }
            else {
                $(this).attr("data-columnvalue", false);
            }
        });

        $('#@string.Format("btnfilter{0}", tablename)').click(function () {
            var form = $(this).closest('form');
            var _tablename = $(this).attr("data-tablename");
            var columns = "";
            var columnsvalue = "";
            var columnsorder = "";

            var i = 0;
            $('#draggablePanelList2').find('input.filter-column').each(function () {


                var columnname = $(this).attr("data-columnname");
                var columnvalue = $(this).attr('data-columnvalue');
                var columnorder = $(this).closest('.list-group-item').index();

                columns += "&columns=" + columnname;
                columnsvalue += "&columnvalues=" + columnvalue;
                columnsorder += "&columnorders=" + columnorder;


                i++;
            });

            $.ajax({
                type: "POST",
                data: columns + columnsvalue + columnsorder + "&tablename=" + _tablename,
                url: "@(urlupdate)",
                success: function (data) {
                    //alert('ok');
                    $(form).submit();
                }
            });
        });

    });
</script>

