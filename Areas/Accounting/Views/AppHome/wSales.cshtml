<style>
    .axis path,
    .axis line {
        fill: none;
        stroke: #efefef;
        shape-rendering: crispEdges;
    }

    .bar {
        fill: steelblue;
    }

        .bar:hover {
            fill: darkorange;
        }

    .x.axis path {
        /*display: none;*/
    }

    .d3-tip {
        background: rgba(255, 255, 255, 0.8) none repeat scroll 0 0;
        border: 2px solid rgba(230, 230, 230, 0.8);
        border-radius: 0px;
        color: #444;
        font-size: 14px;
        font-weight: 600;
        padding: 6px;
        text-align: center;
    }

        /* Creates a small triangle extender for the tooltip */
        .d3-tip:after {
            box-sizing: border-box;
            display: inline;
            font-size: 10px;
            width: 100%;
            line-height: 1;
            /*color: rgba(0, 0, 0, 0.8);*/
            color: rgba(230, 230, 230, 0.8);
            content: "\25BC";
            position: absolute;
            text-align: center;
        }

        /* Style northward tooltips differently */
        .d3-tip.n:after {
            margin: -1px 0 0 0;
            top: 100%;
            left: 0;
        }
</style>



<!-- Box (with bar chart) -->
<div class="box box-primary" id="wsalesbox">
    <div class="box-header">
        <!-- tools box -->
        <div class="pull-right box-tools">
          <button class="btn btn-primary btn-sm refresh-btn" data-toggle="tooltip" title="Reload" onclick="wSalesData();"><i class="fa fa-refresh"></i></button>
            <button class="btn btn-primary btn-sm" data-widget='collapse' data-toggle="tooltip" title="Collapse"><i class="fa fa-minus"></i></button>
            <button class="btn btn-primary btn-sm" data-widget='remove' data-toggle="tooltip" title="Remove"><i class="fa fa-times"></i></button>
        </div>
        <!-- /. tools -->
        @*<i class="fa fa-shopping-cart"></i>*@
        <h3 class="box-title">Kết quả kinh doanh</h3>
    </div>
    <!-- /.box-header -->
    <div class="box-body">
        <div class="row">
            <div id="bar-sales">
                <!-- bar chart -->
            </div>

        </div>
        <!-- /.row - inside box -->

    </div>
    <!-- /.box-body -->
    <div class="box-footer">
<div class="row">
        <div class="col-sm-3 col-xs-6">
            <div class="description-block border-right">
                @*<span class="description-percentage text-green"><i class="fa fa-caret-up"></i> 17%</span>*@
                <h5 class="description-header" id="wsalestotal"></h5>
                <span class="description-text">TỔNG DOANH THU</span>
            </div>
            <!-- /.description-block -->
        </div>
        <!-- /.col -->
        <div class="col-sm-3 col-xs-6">
            <div class="description-block border-right">
                @*<span class="description-percentage text-yellow"><i class="fa fa-caret-left"></i> 0%</span>*@
                <h5 class="description-header" id="wsalestotal1"></h5>
                <span class="description-text">TỔNG BIẾN PHÍ</span>
            </div>
            <!-- /.description-block -->
        </div>
        <!-- /.col -->
        <div class="col-sm-3 col-xs-6">
            <div class="description-block border-right">
                @*<span class="description-percentage text-green"><i class="fa fa-caret-up"></i> 20%</span>*@
                <h5 class="description-header" id="wsalestotal2"></h5>
                <span class="description-text">TỔNG ĐỊNH PHÍ</span>
            </div>
            <!-- /.description-block -->
        </div>
        <!-- /.col -->
        <div class="col-sm-3 col-xs-6">
            <div class="description-block">
                @*<span class="description-percentage text-red"><i class="fa fa-caret-down"></i> 18%</span>*@
                <h5 class="description-header text-green" id="wsalestotal3"></h5>
                <span class="description-text">TỔNG LỢI NHUẬN</span>
            </div>
            <!-- /.description-block -->
        </div>
    </div>
@*      <div class="row-fluid text-right">
            <span>Tổng doanh số :</span> <span id="wsalestotal"></span>
        </div>*@
        <!-- /.row -->
    </div>
    <!-- /.box-footer -->
</div>
<!-- /.box -->

<script type="text/javascript">
    /*
 * Play with this code and it'll update in the panel opposite.
 *
 * Why not try some of the options above?
 */
    $(document).ready(function () {
        wSalesData();
    });


    //The drawing of the histogram has been broken out from the data retrial 
    // or computation. (In this case the 'Irwin-Hall distribution' computation above)

    function draw_histogram(reference, data) {

        var margin = { top: 20, right: 30, bottom: 30, left: 100 },
            width = $(reference).width() - margin.left - margin.right,
            height = 400 - margin.top - margin.bottom;

        var x0 = d3.scale.ordinal()
            .rangeRoundBands([0, width], 0.1);

        var x1 = d3.scale.ordinal();

        var y = d3.scale.linear()
            .range([height, 0]);

        var xAxis = d3.svg.axis()
            .scale(x0)
            .orient("bottom");

        var yAxis = d3.svg.axis()
            .scale(y)
            .orient("left")
            .tickFormat(d3.format(".2s"));


        var tip = d3.tip()
              .attr('class', 'd3-tip')
              .offset([-10, 0])
              .html(function (d) {

                  if (d.name == "Amount") { return "<strong>Doanh số:</strong> <span>" + addCommas(d.yEnd) + "</span>"; }
                  if (d.name == "Amount1") { return "<strong>Biến phí:</strong> <span>" + addCommas(d.yEnd - d.yBegin) + "</span>"; }
                  if (d.name == "Amount2") { return "<strong>Định phí:</strong> <span>" + addCommas(d.yEnd - d.yBegin) + "</span>"; }
                  if (d.name == "Amount3") { return "<strong>Lợi nhuận:</strong> <span>" + addCommas(d.yEnd + d.yBegin) + "</span>"; }
                  
              })

        var color = d3.scale.ordinal()
            .range(["#00a65a", "#00c0ef", "#3c8dbc", "#f39c12"]);

        var svg = d3.select(reference).append("svg")
            .attr("width", width + margin.left + margin.right)
            .attr("height", height + margin.top + margin.bottom)
            .append("g")
            .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

        svg.call(tip);

        var yBegin;

        var innerColumns = {
            "column1": ["Amount1", "Amount2"],
            "column2": ["Amount"],
            "column3": ["Amount3"]
        }


        var columnHeaders = d3.keys(data[0]).filter(function (key) { return key !== "Month" && key !== "Year"; });
        color.domain(d3.keys(data[0]).filter(function (key) { return key !== "Month" && key !== "Year"; }));
        data.forEach(function (d) {
            var yColumn = new Array();
            d.columnDetails = columnHeaders.map(function (name) {
                for (ic in innerColumns) {
                    if ($.inArray(name, innerColumns[ic]) >= 0) {
                        if (!yColumn[ic]) {
                            yColumn[ic] = 0;
                        }
                        yBegin = yColumn[ic];
                        yColumn[ic] += +d[name];
                        if ((+d[name] + yBegin)<0) {
                            return { name: name, column: ic, yBegin: +d[name] + yBegin, yEnd: yBegin, };
                        }
                        return { name: name, column: ic, yBegin: yBegin, yEnd: +d[name] + yBegin, };
                    }
                }
            });

            d.total = d3.max(d.columnDetails, function (d) {
                return d.yEnd;
            });

            d.mintotal = d3.min(d.columnDetails, function (d) {
                return d.yBegin;
            });
        });

        x0.domain(data.map(function (d) { return d.Month; }));
        x1.domain(d3.keys(innerColumns)).rangeRoundBands([0, x0.rangeBand()]);

        y.domain([
             d3.min(data, function (d) {
                 return d.mintotal;
             })
             , d3.max(data, function (d) {
            return d.total;
        })]);

        svg.append("g")
            .attr("class", "x axis")
            .attr("transform", "translate(0," + height + ")")
            .call(xAxis);

        svg.append("g")
            .attr("class", "y axis")
            .call(yAxis)
          .append("text")
            .attr("transform", "rotate(-90)")
            .attr("y", 6)
            .attr("dy", ".7em")
            .style("text-anchor", "end")
            .text("");

        var project_stackedbar = svg.selectAll(".project_stackedbar")
            .data(data)
          .enter().append("g")
            .attr("class", "g")
            .attr("transform", function (d) { return "translate(" + x0(d.Month) + ",0)"; });

        project_stackedbar.selectAll("rect")
            .data(function (d) { return d.columnDetails; })
          .enter().append("rect")
            .attr("width", x1.rangeBand())
            .attr("x", function (d) {
                return x1(d.column);
            })
            .attr("y", function (d) {
                return y(d.yEnd);
            })
            .attr("height", function (d) {
                //alert(d.yBegin);
                //alert(d.yEnd);
                return y(d.yBegin) - y(d.yEnd);
            })
            .style("fill", function (d) { return color(d.name); })
            .on('mouseover', tip.show)
            .on('mouseout', tip.hide);

        var legend = svg.selectAll(".legend")
            .data(columnHeaders.slice().reverse())
          .enter().append("g")
            .attr("class", "legend")
            .attr("transform", function (d, i) { return "translate(0," + i * 20 + ")"; });

        legend.append("rect")
            .attr("x", width - 18)
            .attr("width", 18)
            .attr("height", 18)
            .style("fill", color);

        legend.append("text")
            .attr("x", width - 24)
            .attr("y", 9)
            .attr("dy", ".35em")
            .style("text-anchor", "end")
            .text(function (d) {
                if (d == "Amount") { return "Doanh thu"; }
                if (d == "Amount1") { return "Biến phí"; }
                if (d == "Amount2") { return "Định phí"; }
                if (d == "Amount3") { return "Lợi nhuận"; }
                return d
                ;
            });



    };



    function wSalesData() {
        $("#bar-sales").html("");
        $.ajax({
            type: "GET", url: "@Url.Action("GLSummary")", dataType: "json",
            data: {
                year: "@(DateTime.Now.Year)",
                debits: "",
                credits: "511,512,515,711",
                debits1: "632",
                credits1: "",
                debits2: "641,642,635,811,821",
                credits2: ""
            },
            success: function (data) {
                if (data.rows != null) {
                    $("#wsalestotal").html(data.total)
                    $("#wsalestotal1").html(data.total1)
                    $("#wsalestotal2").html(data.total2)
                    $("#wsalestotal3").html(data.total3)
                    draw_histogram("#bar-sales", data.rows);
                }
                else {

                }
            }
        });
    }
</script>
