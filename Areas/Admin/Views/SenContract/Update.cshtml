@model WebApp.Areas.Admin.Models.SenContract
@using WebApp.Areas.Admin.Services
@{
    Dictionary<string, string> ajaxoption = (Dictionary<string, string>)ViewBag.ajaxoption;

    var contractstatus = new WebApp.Areas.Admin.Models.ContractStatus().selectlist;
}

@*@Html.Partial("_AddNew")*@

<section id="@(ajaxoption["ajaxupdateid"])">
    <div class="box box-primary">
        @Html.Partial("_HeaderEdit")

        @using (@Ajax.BeginForm(new AjaxOptions { LoadingElementId = ajaxoption["ajaxloadingid"], InsertionMode = InsertionMode.Replace, UpdateTargetId = ajaxoption["ajaxupdateid"] }))
        {   
            <div class="box-body">
                @Html.AntiForgeryToken()
                @Html.bsValidationSummary(false)

                <div class="panel panel-default">
                    <div class="panel-body">
                        @Html.svHiddenFor(model => model.ProductId)                        @Html.svHiddenFor(model => model.CustomerId)                        @Html.svHiddenFor(model => model.ContractId)
                        <div class="row">
                            <div class="col-md-6">
                                @Html.bsEditorFor(model => model.ContractDate)
                                @Html.bsEditorFor(model => model.CompleteDate)
                            </div>
                            <div class="col-md-6">
                                @Html.bsEditorFor(model => model.ContractNumber)
                                @Html.bsDropDownListFor(model => model.Status, contractstatus)
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                @Html.bsLabel("SenCustomer_CustomerName", "Khách hàng")
                                @Html.bsAutoComplete("SenCustomer_CustomerName", "CustomerName", Model.SenCustomer != null ? Model.SenCustomer.Name : "")
                            </div>
                            <div class="col-md-6">
                                @Html.bsLabel("SenProduct_ProductName", "Sản phẩm")
                                @Html.bsAutoComplete("SenProduct_ProductName", "ProductName", Model.SenProduct != null ? Model.SenProduct.Name : "")
                            </div>
                        </div>


                        <div class="row">
                            <div class="col-md-6">
                                @Html.bsEditorFor(model => model.ContractAmount)
                                @Html.bsEditorFor(model => model.DiscountPercenttage)                                @Html.bsEditorFor(model => model.Discount)
                                @Html.bsEditorFor(model => model.Amount)
                                @Html.bsEditorFor(model => model.Payment)
                            </div>
                            <div class="col-md-6">
                                @Html.bsEditorFor(model => model.CommissionPercentage)                                @Html.bsEditorFor(model => model.Commission)                                @Html.bsEditorFor(model => model.CommissionReceived)
                                @Html.bsEditorFor(model => model.CommissionPayment)

                                @Html.svHiddenFor(model => model.AssignedTo)
                                @Html.bsLabel("Assign_UserName", "Người sở hữu")
                                @Html.bsAutoComplete("Assign_UserName", "UserName", Model.Assign != null ? Model.Assign.UserName : "")
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                            </div>
                            <div class="col-md-6">
                            </div>
                        </div>
                        @Html.bsTextAreaFor(model => model.Note)



                        <div class="box box-primary collapsed-box">
                            <div class="box-header with-border">
                                <h3 class="box-title">Thông tin mở rộng</h3>
                                <div class="box-tools pull-right">
                                    <button type="button" data-widget="collapse" class="btn btn-box-tool"><i class="fa fa-plus"></i></button>
                                </div>
                                <!-- /.box-tools -->
                            </div>
                            <!-- /.box-header -->
                            <div class="box-body" style="display: none;">
                                <div class="row">
                                    <div class="col-md-12">@Html.Partial("_ExView")</div>
                                </div>
                            </div>
                            <!-- /.box-body -->
                        </div>


                    </div>
                </div>

                @Html.Partial("_ToolbarListUpdate", ajaxoption)
            </div>
        }
        @Html.Partial("_FooterEdit")
    </div>
</section>


@Scripts.Render("~/bundles/adminapp")

<script type="text/javascript">

    //Kiểm tra thay đổi tất cả các text
    $(document).ready(function () {
        $("#@(ajaxoption["ajaxupdateid"]) input[type='text'],#@(ajaxoption["ajaxupdateid"])  select").on("change", function () {
            fieldchange(this);
        });
        GenContractNumber($("#ContractDate"));
        $("#ContractDate").change(function () {
            GenContractNumber(this);
        });


    });

    function GenContractNumber(a) {
        var date = new Date(moment($(a).val(), "DD/MM/YYYY"));
        var yyyy = date.getFullYear().toString().substr(2, 2);
        var mm = (date.getMonth() + 1).toString(); // getMonth() is zero-based
        var dd = date.getDate().toString();
        var kq = yyyy + (mm[1] ? mm : "0" + mm[0]) + (dd[1] ? dd : "0" + dd[0]); // padding
        $("#ContractNumber").val(kq + "01");
    }




    function fieldchange(a) {
        var sectionid = "#@(ajaxoption["ajaxupdateid"]) ";

        var $thisobject = $(a);
        var val = $(a).val();
        var fieldname = $(a).attr("id");

        var url = '@Url.Action("FieldChange")';
        switch (fieldname) {
            case "Assign_UserName":
                //lấy dòng du lieu ve gan cho may cai khac
                $(sectionid + '#AssignedTo').val("");
                if (val != "") {
                    $.ajax({
                        type: "GET", url: url, dataType: "json",
                        data: { fieldname: "UserName", keyword: val },
                        success: function (data) {
                            if (data.rows != null) {
                                $(sectionid + '#AssignedTo').val(data.rows.UserId);
                            }
                            else {
                                $thisobject[0].selectize.setValue('');
                                $thisobject[0].selectize.clearOptions();
                            }
                        }
                    });
                }
                break;
            case "SenProduct_ProductName":
                //lấy dòng du lieu ve gan cho may cai khac
                $(sectionid + '#ProductId').val("");
                if (val != "") {
                    $.ajax({
                        type: "GET", url: url, dataType: "json",
                        data: { fieldname: "ProductName", keyword: val },
                        success: function (data) {
                            if (data.rows != null) {
                                $(sectionid + '#ProductId').val(data.rows.ProductId);
                            }
                            else {
                                $thisobject[0].selectize.setValue('');
                                $thisobject[0].selectize.clearOptions();
                            }
                        }
                    });
                }
                break;
            case "SenCustomer_CustomerName":
                //lấy dòng du lieu ve gan cho may cai khac
                $(sectionid + '#CustomerId').val("");
                if (val != "") {
                    $.ajax({
                        type: "GET", url: url, dataType: "json",
                        data: { fieldname: "CustomerName", keyword: val },
                        success: function (data) {
                            if (data.rows != null) {
                                $(sectionid + '#CustomerId').val(data.rows.CustomerId);
                            }
                            else {
                                $thisobject[0].selectize.setValue('');
                                $thisobject[0].selectize.clearOptions();
                            }
                        }
                    });
                }
                break;
            case "ContractAmount":
                fieldchange($("#DiscountPercenttage"));
                break;
            case "DiscountPercenttage":

                var ContractAmount = parseFloat($(sectionid + '#ContractAmount').autoNumericGet());
                var DiscountPercenttage = parseFloat($thisobject.autoNumericGet());
                var Discount = (DiscountPercenttage * ContractAmount) / 100;

                $("#Discount").autoNumericSet(Discount);
                fieldchange($("#Discount"));
                break;
            case "Discount":
                var ContractAmount = parseFloat($(sectionid + '#ContractAmount').autoNumericGet());
                var Discount = parseFloat($thisobject.autoNumericGet());
                var Amount = ContractAmount - Discount;

                $("#Amount").autoNumericSet(Amount);
                fieldchange($("#Amount"));
                break;

            case "Amount":
                fieldchange($("#Payment"));
                break;

            case "Payment":
                fieldchange($("#CommissionPercentage"));
                break;

            case "CommissionPercentage":
                var Payment = parseFloat($(sectionid + '#Payment').autoNumericGet());
                var CommissionPercentage = parseFloat($thisobject.autoNumericGet());
                var Commission = (CommissionPercentage * Payment) / 100;

                $("#Commission").autoNumericSet(Commission);
                fieldchange($("#Commission"));
                break;
            case "Commission":
                fieldchange($("#CommissionReceived"));
                break;
            case "CommissionReceived":
                var Commission = parseFloat($(sectionid + '#Commission').autoNumericGet());
                var CommissionReceived = parseFloat($thisobject.autoNumericGet());
                var CommissionPayment = Commission - CommissionReceived;

                $("#CommissionPayment").autoNumericSet(CommissionPayment);

                break;


            default:
        }
    }
</script>

