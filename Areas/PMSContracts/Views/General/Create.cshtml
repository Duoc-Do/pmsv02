@model WebApp.Areas.PMSContracts.Models.GeneralModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/PMSContracts/Views/Shared/_LayoutPMSContract.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>GeneralModel</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.ContractID)
        </div>
        <div class="editor-field">

            @Html.TextBoxFor(model => model.ContractID, new { @Value = "333" })
            
            @Html.ValidationMessageFor(model => model.ContractID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ClauseCode)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.ClauseCode, new { @Value = "Tạm ứng vật tư, vật liệu" })
            @Html.ValidationMessageFor(model => model.ClauseCode)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ClauseContent)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.ClauseContent, new { @Value = "Chủ đầu tư sẽ xem xét cho nhà thầu tạm ứng để mua trước một số loại vật tư, thiết bị, bán thành phẩm có giá trị lớn nhằm tránh việc tăng giá" })
            @Html.ValidationMessageFor(model => model.ClauseContent)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.OriginalLanguage)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.OriginalLanguage, new { @Value = "vi" })
            @Html.ValidationMessageFor(model => model.OriginalLanguage)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ParentId)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.ParentId, new { @Value = "12" })
            @Html.ValidationMessageFor(model => model.ParentId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.BookType)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.BookType, new { @Value = "RED" })
            @Html.ValidationMessageFor(model => model.BookType)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CreationDate)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.CreationDate, new { @Value = @DateTime.Now.ToShortDateString() })
            @Html.ValidationMessageFor(model => model.CreationDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Type)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Type, new { @Value = "ORG" })
            @Html.ValidationMessageFor(model => model.Type)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@*@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@
@*@using (Html.BeginForm("Import", "General", FormMethod.Post,new { enctype = "multipart/form-data" }))
{
    @Html.Raw(ViewBag.Error)
    <span>Excel File </span><input type="file" name="excelfile" /><br />
    <input type="submit" value="Import" />
}*@